test <- as.data.frame(str_replace(step4$Kandidaat, "dr. |mr. |dr.mr", ""))
test <- as.data.frame(str_replace(step4$Kandidaat, "dr. |mr. |dr. mr. |mr. dr. ", ""))
test <- as.data.frame(str_replace(step4$Kandidaat, "dr.|mr. |dr. mr. |mr. dr. ", ""))
test <- as.data.frame(str_replace(step4$Kandidaat, "dr. |mr. |dr. mr. |mr. dr. ", ""))
str_replace("dr. mr. H. van Hanzestein", "dr. | mr. | dr. mr. ", "")
str_replace("dr. mr. H. van Hanzestein", "dr. mr. | dr. | mr. | ", "")
as.data.frame(str_replace(step4$Kandidaat, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
test <- as.data.frame(str_replace(step4$Kandidaat, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
test <- as.data.frame(test, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")
test <- str_replace(test, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")
test <- as.data.frame(str_replace(step4$Kandidaat, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
View(test)
test <- as.data.frame(str_replace(test$`str_replace(step4$Kandidaat, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")`, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
test[,test[,1] != ""]
test[,1 != ""]
test[200,]
test[test$`str_replace(test$`str_replace(step4$Kandidaat, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")`, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")` == ""]
test[test$`str_replace(test$`str_replace(step4$Kandidaat, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")`, "mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", "")` == "",]
names(test) <- "Hallo"
test[test$Hallo != "",]
test <- test[test$Hallo != "",]
test <- as.data.frame(
str_replace(step4$Kandidaat,
"mr. | dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
View(test)
names(test) <- "Hallo"
View(test)
test <- test[test$Hallo != ""]
test <- test[test$Hallo != "",]
test <- as.data.frame(
str_replace(step4$Kandidaat,
"mr. | dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
names(test) <- "Hallo"
test <- as.data.frame(test[test$Hallo != "",])
View(test)
test <- as.data.frame(
str_replace(step4$Kandidaat,
"mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ", ""))
names(test) <- "Hallo"
test <- as.data.frame(test[test$Hallo != "",])
View(test)
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
no_of_candidates = max(number),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
for (i in 1:3) {
step4$Kandidaat <- str_replace(step4$Kandidaat, "\\.[a-z]",
paste("\\.",
substr(
str_extract(
step4$Kandidaat, "\\.[a-z]"),
2,2)))
}
View(step4)
for (i in 1:3) {
step4$Kandidaat <- str_replace(step4$Kandidaat,
"mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ",
"")
}
# Now make an indicator whether someone is a politician
step5 <- step4 %>%
mutate(politician = ifelse(Kandidaat != "", ifelse(Kandidaat %in% politicians, 1, 0), ""))
View(step5)
step5[voteshare > 0.40 & politician == 0,]
step5[step5$voteshare > 0.40 & step5$politician == 0,]
testerinho <- step5[step5$voteshare > 0.40 & step5$politician == 0,]
View(testerinho)
testerinho2 <- as.data.frame(politicians)
View(testerinho2)
enc2utf8(testerinho$Kandidaat)
enc2native(testerinho$Kandidaat)
testerinho <- step5[step5$voteshare > 0.35 & step5$politician == 0,]
View(testerinho)
allfiles <- dir()
allfiles <- allfiles[grepl("Uitslag(.+)", allfiles)]
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "utf8")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
View(step3)
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "ISO-8859-1")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
View(step3)
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "UTF-8")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
View(step3)
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
library(lubridate)
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- dmy(step3[,7])
# Change variable name
names(step3)[1] <- "Regio"
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(
allelections$Jaar,
allelections$Maand,
allelections$Dag, sep = "-"))
#2. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
# 3. Some observations have more turnout than electorate:
allelections[allelections$Geldig > allelections$Electoraat,]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
no_of_candidates = max(number),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
## Now, we ask ourselves: was it a close election?
## We get the number of seats available to define close elections for 1 seat, 2 seats, and more seats.
allelected <- read.csv("Data/allelected.csv")
allelected <- allelected %>%
mutate(name = paste(voornaam, achternaam, sep = " "))
allelected <- allelected %>%
mutate(name = str_replace(name, "\\s\\s"," "))
politicians <- unique(allelected$name)
for (i in 1:3) {
step4$Kandidaat <- str_replace(step4$Kandidaat, "\\.[a-z]",
paste("\\.",
substr(
str_extract(
step4$Kandidaat, "\\.[a-z]"),
2,2)))
}
for (i in 1:3) {
step4$Kandidaat <- str_replace(step4$Kandidaat,
"mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ",
"")
}
# Now make an indicator whether someone is a politician
step5 <- step4 %>%
mutate(politician = ifelse(Kandidaat != "", ifelse(Kandidaat %in% politicians, 1, 0), ""))
View(step5)
testerinho <- step5[step5$voteshare > 0.40 & step5$politician == 0,]
View(testerinho)
View(allelections)
View(allelected)
allelected %>%
mutate(Date = as.Date(
paste(allelected$jaar, allelected$maand, allelected$dag, sep = "-")
))
allelected <- allelected %>%
mutate(Date = as.Date(
paste(allelected$jaar, allelected$maand, allelected$dag, sep = "-")
))
# Then, we get the number of seats available to define close elections for 1 seat, 2 seats, and more seats.
allelected <- allelected %>%
mutate(date = as.Date(
paste(allelected$jaar, allelected$maand, allelected$dag, sep = "-")
))
allelected %>%
group_by(districtsnaam, type.verkiezing,date) %>%
summarise(seats = mean(seats))
allelected %>%
group_by(districtsnaam, type.verkiezing,date) %>%
summarise(seats = mean(zetels))
seatsavailable <- allelected %>%
group_by(districtsnaam, type.verkiezing,date) %>%
summarise(seats = mean(zetels))
View(seatsavailable)
View(testerinho)
View(step5)
View(seatsavailable)
testerinho <- merge(
x=step5, y=seatsavailable,
by.x = c("Regio", "sub_election"),
by.y = c("districtsnaam", "date"))
View(testerinho)
testerinho <- merge(
x=step5, y=seatsavailable,
by.x = c("Regio", "sub_election"),
by.y = c("districtsnaam", "date"), keep.x = TRUE)
?merge
testerinho <- merge(
x=step5, y=seatsavailable,
by.x = c("Regio", "sub_election"),
by.y = c("districtsnaam", "date"), all.x = TRUE)
View(testerinho)
allfiles <- dir()
allfiles <- allfiles[grepl("Uitslag(.+)", allfiles)]
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "UTF-8")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
library(lubridate)
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- dmy(step3[,7])
# Change variable name
names(step3)[1] <- "Regio"
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(
allelections$Jaar,
allelections$Maand,
allelections$Dag, sep = "-"))
#2. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
# 3. Some observations have more turnout than electorate:
allelections[allelections$Geldig > allelections$Electoraat,]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
View(step4)
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
no_of_candidates = max(number),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
number = numchar(number),
no_of_candidates = max(number),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
no_of_candidates = max(number),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
View(step4)
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
step4 %>%
group_by(Regio, sub_election) %>%
mutate(number2 = max(number))
test <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number2 = max(number))
View(test)
test <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = as.numeric(number),
number2 = max(number))
View(test)
?max
test <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = as.numeric(number),
number2 = max(number, na.rm = TRUE))
View(test)
allfiles <- dir()
allfiles <- allfiles[grepl("Uitslag(.+)", allfiles)]
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "UTF-8")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
library(lubridate)
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- dmy(step3[,7])
# Change variable name
names(step3)[1] <- "Regio"
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(
allelections$Jaar,
allelections$Maand,
allelections$Dag, sep = "-"))
#2. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
# 3. Some observations have more turnout than electorate:
allelections[allelections$Geldig > allelections$Electoraat,]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = as.numeric(number),
no_of_candidates = max(number, na.rm = TRUE))
View(step4)
allelected <- read.csv("Data/allelected.csv")
allelected <- allelected %>%
mutate(name = paste(voornaam, achternaam, sep = " "))
allelected <- allelected %>%
mutate(name = str_replace(name, "\\s\\s"," "))
politicians <- unique(allelected$name)
for (i in 1:3) {
step4$Kandidaat <- str_replace(step4$Kandidaat, "\\.[a-z]",
paste("\\.",
substr(
str_extract(
step4$Kandidaat, "\\.[a-z]"),
2,2)))
}
for (i in 1:3) {
step4$Kandidaat <- str_replace(step4$Kandidaat,
"mr. |dr. |mr. dr. |dr. mr. |jhr. | jhr. mr. ",
"")
}
View(step4)
# Now make an indicator whether someone is a politician
step5 <- step4 %>%
mutate(politician = ifelse(Kandidaat != "", ifelse(Kandidaat %in% politicians, 1, 0), ""))
View(step5)
View(step5)
allfiles <- dir()
allfiles <- allfiles[grepl("Uitslag(.+)", allfiles)]
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "UTF-8")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
View(step3)
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
library(lubridate)
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- dmy(step3[,7])
# Change variable name
names(step3)[1] <- "Regio"
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(
allelections$Jaar,
allelections$Maand,
allelections$Dag, sep = "-"))
#2. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
# 3. Some observations have more turnout than electorate:
allelections[allelections$Geldig > allelections$Electoraat,]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = as.numeric(number),
no_of_candidates = max(number, na.rm = TRUE))
View(step4)
library(stringr)
allfiles <- dir()
allfiles <- allfiles[grepl("Uitslag(.+)", allfiles)]
#Import all files
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";", encoding = "UTF-8")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
library(lubridate)
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- dmy(step3[,7])
# Change variable name
names(step3)[1] <- "Regio"
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(
allelections$Jaar,
allelections$Maand,
allelections$Dag, sep = "-"))
#2. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
# 3. Some observations have more turnout than electorate:
allelections[allelections$Geldig > allelections$Electoraat,]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
View(step3)
