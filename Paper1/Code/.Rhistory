dbname='wrds',
sslmode='require',
user='machiels')
#"Main menu"
res <- dbSendQuery(wrds, "select distinct table_schema
from information_schema.tables
where table_type ='VIEW'
or table_type ='FOREIGN TABLE'
order by table_schema")
#"Main menu"
res <- dbSendQuery(wrds, "select distinct table_schema
from information_schema.tables
where table_type ='VIEW'
or table_type ='FOREIGN TABLE'
order by table_schema")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
#Let's see what's in compdcur
res <- dbSendQuery(wrds, "select distinct table_name
from information_schema.columns
where table_schema='compdcur'
order by table_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
#Let's see what's in compdcur
res <- dbSendQuery(wrds, "select distinct table_name
from information_schema.columns
where table_schema='comp'
order by table_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm from compg.g_idxcst_his WHERE gvkeyx = '150262' or gvkeyx = '150093' or gvkeyx = '150267'")
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm from comp.funda WHERE gvkeyx = '150262' or gvkeyx = '150093' or gvkeyx = '150267'")
res <- dbSendQuery(wrds, "select conm from comp.funda WHERE funda.gvkey = '150262' or funda.gvkey = '150093' or funda.gvkey = '150267'")
data - dbFetch(res, n=-1)
data <- dbFetch(res, n=-1)
dbClearResults(res)
dbClearResult(res)
data
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
data <- dbFetch(res, n=-1)
data <- dbFetch(res, n=-1)
dbClearResult(res)
dbClearResult(res)
data
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
#Let's see what's in comp
res <- dbSendQuery(wrds, "select distinct table_name
from information_schema.columns
where table_schema='comp'
order by table_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda_fncd'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
View(data)
a <- "select * from compg.g_idxcst_his WHERE gvkeyx = '150262' or gvkeyx = '150093' or gvkeyx = '150267' "
res <- dbSendQuery(wrds, a)
res <- dbSendQuery(wrds, a)
data <- dbFetch(res, n = -1)
dbClearResult(res)
stocks <- data
View(stocks)
stocks$gvkey
request <- paste("select conm from comp.funda WHERE", stocks$gvkey, sep = "' or gvkey = '")
request
library(stringr)
concatenate(request)
request <- paste0("select conm from comp.funda WHERE", stocks$gvkey, sep = "' or gvkey = '")
request
request <- paste("select conm from comp.funda WHERE", stocks$gvkey, sep = "' or gvkey = '")
request
request <- paste("select conm from comp.funda WHERE", "'",stocks$gvkey, "'",sep = "gvkey = ")
request
request <- paste("select conm from comp.funda WHERE", "'", stocks$gvkey, "'")
request
request <- paste("select conm from comp.funda WHERE gvkey =", "'", stocks$gvkey, "'", "or")
request
View(stocks)
res <- dbSendQuery(wrds, "select conm from comp.funda_fncd WHERE gvkey = '006305")
res <- dbSendQuery(wrds, "select conm from comp.funda_fncd WHERE gvkey = '006305'")
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda_fncd'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
View(data)
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
View(data)
res <- dbSendQuery(wrds, "select conm from comp.funda WHERE gvkey = '006305'")
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm from comp.funda WHERE gvkey = '006305'")
data <- dbFetch(res, n=-1)
View(data)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm, fyr from comp.funda WHERE gvkey = '006305'")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm, date from comp.funda WHERE gvkey = '006305'")
res <- dbSendQuery(wrds, "select conm, datedate from comp.funda WHERE gvkey = '006305'")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm, datadate from comp.funda WHERE gvkey = '006305'")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm cusip,permno, datadate from comp.funda WHERE gvkey = '006305'")
res <- dbSendQuery(wrds, "select conm cusip, datadate from comp.funda WHERE gvkey = '006305'")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select conm, cusip, datadate from comp.funda WHERE gvkey = '006305'")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
res <- dbSendQuery(wrds, "select a.*, b.conm, b.cusip, b.datadate from comgpg.g_idxcst_his a join comp.funda b where a.gvkeyx = '150262' or a.gvkeyx = '150093' or a.gvkeyx = '150267')
res <- dbSendQuery(wrds, "select a.*, b.conm, b.cusip, b.datadate from comgpg.g_idxcst_his a join comp.funda b where a.gvkeyx = '150262' or a.gvkeyx = '150093' or a.gvkeyx = '150267' ")
View(stocks)
View(stocks)
res <- dbSendQuery(wrds, "select a.*, b.conm, b.cusip, b.datadate from compg.g_idxcst_his a join comp.funda b where a.gvkeyx = '150262' or a.gvkeyx = '150093' or a.gvkeyx = '150267' ")
res <- dbSendQuery(wrds, "select a.*, b.conm, b.cusip, b.datadate from compg.g_idxcst_his a join comp.funda b on a.gvkey = b.gvkey where a.gvkeyx = '150262' or a.gvkeyx = '150093' or a.gvkeyx = '150267' ")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
View(data)
stocks <- data
View(stocks)
#Let's see what variables are in funda
res <- dbSendQuery(wrds, "select column_name
from information_schema.columns
where table_schema='comp'
and table_name='funda'
order by column_name")
data <- dbFetch(res, n=-1)
dbClearResult(res)
data
#Now, let's make another query to retrieve a lot of financial data. For example:
#act - current assets
#at - total assets
#dltt - long term debt
#emp - employees
#lt - total liabilities
#gdwl - goodwill
res <- dbSendQuery(wrds, "select gvkey, act, at, dltt, emp, lt, gdwl from comp.funda")
data <- dbFetch(res, n = -1)
data <- dbFetch(res, n = -1)
dbClearResult(res)
data <- dbFetch(res, n = -1)
#Now, let's make another query to retrieve a lot of financial data. For example:
#act - current assets
#at - total assets
#dltt - long term debt
#emp - employees
#lt - total liabilities
#gdwl - goodwill
res <- dbSendQuery(wrds, "select gvkey, act, at, dltt, emp, lt, gdwl from comp.funda")
data <- dbFetch(res, n = -1)
dbClearResult(res)
View(data)
merge(stocks, data)
left_join(stocks, data)
View(data)
#Now, let's make another query to retrieve a lot of financial data. For example:
#act - current assets
#at - total assets
#dltt - long term debt
#emp - employees
#lt - total liabilities
#gdwl - goodwill
res <- dbSendQuery(wrds, "select gvkey, datadate, act, at, dltt, emp, lt, gdwl from comp.funda")
data <- dbFetch(res, n = -1)
View(stocks)
#Let's now try to match the stocks that are of interest to us to the financial data
data %>%
mutate(datadate = str_extract(datadate, [0-9]{4}))
#Let's now try to match the stocks that are of interest to us to the financial data
data %>%
mutate(datadate = str_extract(datadate,"[0-9]{4}"))
#Let's now try to match the stocks that are of interest to us to the financial data
data <- data %>%
mutate(datadate = str_extract(datadate,"[0-9]{4}"))
stocks <- stocks %>%
mutate(datadate = str_extract(datadate, "[0-9]{4}"))
left_join(stocks, data, by = c("gvkey", "datadate"))
ourdata <- left_join(stocks, data, by = c("gvkey", "datadate"))
View(ourdata)
tibble(ourdata)
ourdata
dbDisconnect(wrds)
dbDisconnect(conn =wrds)
Now, let us select only those observations that belong to the indices that interest us:
```{r}
a <- "select * from compg.g_idxcst_his WHERE gvkeyx = '150262' or gvkeyx = '150093' or gvkeyx = '150267' "
#Use a dot to go from database to dataset)
install.packages('miniUI')
install.packages('shiny')
install.packages('shinyFiles')
install.packages('cronR')
library(cronR)
library(cronR)
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
library(rvest)
library(stringr)
urls <- paste("http://resources.huygens.knaw.nl/verkiezingentweedekamer/databank/zoek_district/samenstelling_per_district/samenstelling_per_district?District_ID=", seq(10,150), sep = "")
urls[1]
urls[2]
districtdata <- read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE)
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE) %>%
as.data.frame()
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = FALSE)
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE)
?html_table
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE)
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE)
read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
test1 <- read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
test1[1,]
colnames(test1) <- test1[1,]
test1
test1[-1,]
urls <- paste("http://resources.huygens.knaw.nl/verkiezingentweedekamer/databank/zoek_district/samenstelling_per_district/samenstelling_per_district?District_ID=", seq(10,150), sep = "")
urls[1:3]
urls <- urls[1:3]
for(i in 1:length(urls)) {
districtname <- read_html(urls[i]) %>%
html_nodes("#content-text > h1:nth-child(2)") %>%
html_text()
interim <- read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
colnames(interim) <- interim[1,]
districtdata <- interim[-1,]
data <- data.frame(districtdata, districtname)
out <- rbind(out, data)
Sys.sleep(0.5)
}
out <- NULL
for(i in 1:length(urls)) {
districtname <- read_html(urls[i]) %>%
html_nodes("#content-text > h1:nth-child(2)") %>%
html_text()
interim <- read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
colnames(interim) <- interim[1,]
districtdata <- interim[-1,]
data <- data.frame(districtdata, districtname)
out <- rbind(out, data)
Sys.sleep(0.5)
}
View(out)
urls <- paste("http://resources.huygens.knaw.nl/verkiezingentweedekamer/databank/zoek_district/samenstelling_per_district/samenstelling_per_district?District_ID=", seq(10,150), sep = "")
#Initialization
out <- NULL
for(i in 1:length(urls)) {
districtname <- read_html(urls[i]) %>%
html_nodes("#content-text > h1:nth-child(2)") %>%
html_text()
interim <- read_html(urls[1]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
colnames(interim) <- interim[1,]
districtdata <- interim[-1,]
data <- data.frame(districtdata, districtname)
out <- rbind(out, data)
Sys.sleep(0.5)
}
View(out)
urls[141]
#Initialization
out <- NULL
for(i in 1:length(urls)) {
districtname <- read_html(urls[i]) %>%
html_nodes("#content-text > h1:nth-child(2)") %>%
html_text()
interim <- read_html(urls[i]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
colnames(interim) <- interim[1,]
districtdata <- interim[-1,]
data <- data.frame(districtdata, districtname)
out <- rbind(out, data)
Sys.sleep(0.5)
}
#Initialization
out <- NULL
for(i in 1:length(urls)) {
districtname <- read_html(urls[i]) %>%
html_nodes("#content-text > h1:nth-child(2)") %>%
html_text()
interim <- read_html(urls[i]) %>%
html_nodes(".vertical") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame()
colnames(interim) <- interim[1,]
districtdata <- interim[-1,]
data <- try(data.frame(districtdata, districtname))
out <- rbind(out, data)
Sys.sleep(0.5)
}
View(out)
urls[2]
View(out)
View(out)
out[!is.na(out$districtname)]
out[!is.na(out$districtname),]
out <- out[!is.na(out$districtname),]
View(out)
View(out)
View(out)
str_split(out$RK, "\\(")
library(tidyverse)
out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct", sep = "\\s"))
out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s"))
out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s")
out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s") %>%
separate(Hervormd, into = c("Hervormd_number", "Hervormd_pct"), sep = "\\s")
out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s") %>%
separate(Hervormd, into = c("Hervormd_number", "Hervormd_pct"), sep = "\\s") %>%
separate(Gereformeerd, into = c("Gereformeerd_number", "Gereformeerd_pct"), sep = "\\s") %>%
separate(Overig, into = c("Overig_number", "Overig_pct"), sep = "\\s")
final <- out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s") %>%
separate(Hervormd, into = c("Hervormd_number", "Hervormd_pct"), sep = "\\s") %>%
separate(Gereformeerd, into = c("Gereformeerd_number", "Gereformeerd_pct"), sep = "\\s") %>%
separate(Overig, into = c("Overig_number", "Overig_pct"), sep = "\\s")
View(final)
final %>%
mutate_at(c(4,6,8,10), . = str_extract(., "[0-9]{1,}\\.[0-9]{1,}"))
final %>%
mutate_at(c(4,6,8,10), str_extract(., "[0-9]{1,}\\.[0-9]{1,}"))
?mutate_at
final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}")
final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}") %>%
mutate_at(c(4,6,8,10), as.numeric)
final <- final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}") %>%
mutate_at(c(4,6,8,10), as.numeric)
View(final)
final <- out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s") %>%
separate(Hervormd, into = c("Hervormd_number", "Hervormd_pct"), sep = "\\s") %>%
separate(Gereformeerd, into = c("Gereformeerd_number", "Gereformeerd_pct"), sep = "\\s") %>%
separate(Overig, into = c("Overig_number", "Overig_pct"), sep = "\\s")
final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}") %>%
mutate_at(c(4,6,8,10), as.numeric)
out <- out[!is.na(out$districtname),]
final <- out %>%
mutate(districtname = as.character(districtname),
bevolkingsomvang = as.numeric(str_replace(bevolkingsomvang, ",","")),
jaar = as.numeric(jaar)) %>%
separate(RK, into = c("RK_number", "RK_pct"), sep = "\\s") %>%
separate(Hervormd, into = c("Hervormd_number", "Hervormd_pct"), sep = "\\s") %>%
separate(Gereformeerd, into = c("Gereformeerd_number", "Gereformeerd_pct"), sep = "\\s") %>%
separate(Overig, into = c("Overig_number", "Overig_pct"), sep = "\\s")
final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}") %>%
mutate_at(c(4,6,8,10), as.numeric) %>%
mutate_at(c(3,5,7,8), str_replace, ",", "")
final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}") %>%
mutate_at(c(4,6,8,10), as.numeric) %>%
mutate_at(c(3,5,7,9), str_replace, ",", "") %>%
mutate_at(c(3,5,7,9), as.numeric)
final <- final %>%
mutate_at(c(4,6,8,10), str_extract, "[0-9]{1,}\\.[0-9]{1,}") %>%
mutate_at(c(4,6,8,10), as.numeric) %>%
mutate_at(c(3,5,7,9), str_replace, ",", "") %>%
mutate_at(c(3,5,7,9), as.numeric)
View(final)
getwd()
setwd("/home/bas/Documents/UU_PhD_BasMachielsen")
setwd("/home/bas/Documents/UU_PhD_BasMachielsen/Code")
setwd("/home/bas/Documents/UU_PhD_BasMachielsen/Code/")
setwd("/home/bas/Documents/UU_PhD_BasMachielsen/Paper1/Code/")
dir()
write.csv(final, "../Data/Religion_inhabitants_per_district.csv")
tempfile()
