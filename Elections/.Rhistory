sapply(allelections[,7:10], as.numeric(as.character()))
numchar <- function(x) { as.numeric(as.character(x))}
sapply(allelections[,7:10], numchar())
sapply(allelections[,7:10], numchar(x))
sapply(allelections[,7:10], numchar(allelections[,7:10]))
?lapply
numchar("5460")
sapply(as.matrix(allelections[,7:10]), numchar())
sapply(as.matrix(allelections[,7:10]), numchar(x))
sapply(as.matrix(allelections[,7:10]), numchar(allelections[,7:10]))
numchar(allelections[,7])
sapply(as.matrix(allelections[,7:10]), numchar)
sapply(allelections[,7:10]), numchar)
sapply(allelections[,7:10], numchar)
unlist(sapply(allelections[,7:10], numchar))
allelections[,7:10] <- sapply(allelections[,7:10], numchar)
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(allelections$Jaar, allelections$Maand, allelections$Dag, sep = "-"))
#Omit elections about which nothing is known
allelections <- allelections[allelections$Blanco != "-",]
allelections[,7:10] <- sapply(allelections[,7:10], numchar)
allelections %>%
filter(Type == "algemeen" | Type == "algemeen/enkelvoudig") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Electoraat)/sum(Geldig))
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Electoraat)/sum(Geldig))
allelections %>%
filter(Type == "periodiek") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Electoraat)/sum(Geldig))
allelections %>%
filter(Type == "periodiek") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Geldig)/sum(Electoraat))
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Geldig)/sum(Electoraat))
View(step3)
#Convert into dates
sapply(step3[,6:7], as.Date)
#Convert into dates
sapply(step3[,6], as.Date)
#Convert into dates
sapply(step3[,6], as.Date(format = "%Y%M%d"))
#Convert into dates
sapply(step3[,6], as.Date(,format = "%Y%M%d"))
#Convert into dates
sapply(step3[,6], as.Date(format = "%Y%M%d"))
#Convert into dates
sapply(step3[,6], as.Date(step3[,6], format = "%Y%M%d"))
#Convert into dates
as.Date(step3[,6], format = "%Y%M%d")
#Convert into dates
as.Date(step3[,6], format = "%Y%m%d")
#Convert into dates
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- as.Date(step3[,7], format = "%Y%M%d"
View(step3)
step3[,7] <- as.Date(step3[,7], format = "%Y%M%d")
#Initial setup
setwd("~/Documents/UU_PhD_BasMachielsen/Elections")
#setwd("C:/Users/Machi003/RWD/UU_PhD_BasMachielsen/Elections")
allfiles <- dir()
allfiles <- allfiles[-c(1,2)]
#Code for reading the files
library(stringr)
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7]
as.Date(step3[,7])
step3[10,7]
step3[1:25,7]
as.Date(step3[1:25,7])
as.Date(step3[1:25,7], format = "%d%m%Y")
as.Date(step3[1:25,7], format = "%d%M%Y")
as.Date(step3[1:25,7], format = "%d%m%Y")
as.Date(step3[1:25,7], format = "%d%m%Y")
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
as.Date(step3$sub_election)
as.Date(step3$sub_election, format = "%a%b%Y")
library(lubridate)
dmy(step3$sub_election)
step3[,7] <- dmy(step3[,7])
#Convert into dates
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(allelections$Jaar, allelections$Maand, allelections$Dag, sep = "-"))
#Omit elections about which nothing is known
allelections <- allelections[allelections$Blanco != "-",]
#Numericize all other variables
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar)
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Geldig)/sum(Electoraat))
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = mean(Geldig/Electoraat))
allelections[Opkomst > Electoraat,]
allelections[allelections$Opkomst > allelections$Electoraat,]
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = sum(Opkomst/Electoraat))
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
na.omit() %>%
summarise(turnout = sum(Opkomst/Electoraat))
allelections %>%
filter(Type == "algemeen") %>%
na.omit() %>%
group_by(Jaar) %>%
summarise(turnout = sum(Opkomst/Electoraat))
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = mean(Opkomst/Electoraat), na.rm = TRUE)
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = mean(Opkomst/Electoraat, na.rm = TRUE))
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = mean(Geldig/Electoraat, na.rm = TRUE))
allelections[allelections$Geldig > allelections$Electoraat,]
allelections %>%
filter(Type == "algemeen") %>%
group_by(Jaar) %>%
summarise(turnout = mean(Geldig/Electoraat, na.rm = TRUE))
unique(allelections$Type)
View(step3)
?merge
# Now, attempt to match step3 to election info
merge(step3, allelections, by.x = c(Regio, sub_election), by.y = c(district, Date), all.x = TRUE)
names(step3)
# Now, attempt to match step3 to election info
merge(step3, allelections, by.x = c("Regio", "sub_election"), by.y = c("district", "Date"), all.x = TRUE)
# Now, attempt to match step3 to election info
merge(step3, allelections, by.x = c("Regio", "sub_election"), by.y = c("district", "Date"), all.x = TRUE)
# Now, attempt to match step3 to election info
merge(step3, allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "Date"), all.x = TRUE)
names(step3)
# Now, attempt to match step3 to election info
merge(step3, allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "Date"), all.x = TRUE)
# Now, attempt to match step3 to election info
merge(x=step3, y=allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "Date"), all.x = TRUE)
# Now, attempt to match step3 to election info
merge(x=step3, y=allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "date"), all.x = TRUE)
# Now, attempt to match step3 to election info
test <- merge(x=step3, y=allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "date"), all.x = TRUE)
View(test)
# Now, attempt to match step3 to election info
test <- merge(x=step3, y=allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
# Now, attempt to match step3 to election info
test <- merge(x=step3, y=allelections, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
View(test)
?lubridate
allelections[,c("District","date","Type")]
View(allelections)
merge
Method("merge")
UseMethod
UseMethod("merge")
?UseMethod
mean
function
x
allelections[,c("District","date","Type", "Electoraat")]
allelections[,c("District","date","Type", "Electoraat","Geldig")]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
View(nieuw)
# Now, attempt to match step3 to election info
test <- merge(x=step3, y=nieuw, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
View(test)
test[order( test[,2], test[,8],test[,4], test[,6])]
test[order( test[,2], test[,8],test[,4], test[,6]),]
test[order( test[,2], test[,1], test[,8],test[,4], test[,6]),]
test[order( test[,2], test[,1], test[,8],test[,4], test[,6], decreasing = T),]
test <- test[order( test[,2], test[,1], test[,8],test[,4], test[,6], decreasing = T),]
test <- test[order( test[,2], decreasing = T, test[,1], test[,8],test[,4], test[,6], decreasing = T),]
test <- test[order(test[,2], test[,1], test[,8],test[,4], test[,6], decreasing = F),]
#Create candidate positions
step4 <- step3 %>%
group_by(Regio, date) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
#Create candidate positions
step4 <- test %>%
group_by(Regio, date) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
View(step4)
?seq_along
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat),""))
View(step4)
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(-Kandidaat),""))
View(step4)
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat),""))
test <- test[order(test[,2], test[,1], test[,8],test[,4], test[,6], decreasing = T),]
View(test)
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat),""))
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
seq(001,100)
View(step3)
View(step4)
kandidaten <- step4 %>%
group_by(Regio, date) %>%
mutate(totalvotes = sum(AantalStemmen), no_of_candidates = max(number))
kandidaten <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(totalvotes = sum(AantalStemmen), no_of_candidates = max(number))
View(kandidaten)
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(allelections$Jaar, allelections$Maand, allelections$Dag, sep = "-"))
#3. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
View(allelections)
numchar
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
# Now, attempt to match step3 to election info
test <- merge(x=step3, y=nieuw, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
test <- test[order(test[,2], test[,1], test[,8],test[,4], test[,6], decreasing = T),]
#Create candidate positions
step4 <- test %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
View(step4)
View(step4)
#Initial setup
setwd("~/Documents/UU_PhD_BasMachielsen/Elections")
#setwd("C:/Users/Machi003/RWD/UU_PhD_BasMachielsen/Elections")
allfiles <- dir()
allfiles <- allfiles[-c(1,2)]
#Code for reading the files
library(stringr)
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";")
step2 <- cbind(step1, date = str_extract(i,"\\d.*[^\\.csv]+"))
step3 <- rbind(step3, step2)
}
#Now, split all the dates according to general election and specifics
library(tidyverse)
step3 <- step3 %>%
separate(col = date, into = c("main_election","sub_election"), sep = "_")
#Maybe remove (1) from string
step3$sub_election <- str_replace(step3$sub_election, "\\(1\\)","")
#Convert into dates
library(lubridate)
step3[,6] <- as.Date(step3[,6], format = "%Y%m%d")
step3[,7] <- dmy(step3[,7])
# Change variable name
names(step3)[1] <- "Regio"
#Then, attempt to match the kind of election, the amount of seats and the amount of candidates.
# 1. Make the dates
allelections <- read.csv("Data/allelections.csv")
allelections$date <- as.Date(paste(allelections$Jaar, allelections$Maand, allelections$Dag, sep = "-"))
#2. Numericize all other variables about election info
numchar <- function(x) { as.numeric(as.character(x))}
allelections[,7:10] <- sapply(allelections[,7:10], numchar) # Don't worry about the NA's
# 3. Some observations have more turnout than electorate:
allelections[allelections$Geldig > allelections$Electoraat,]
nieuw <- allelections[,c("District","date","Type", "Electoraat","Geldig")]
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6], decreasing = T),]
View(step4)
# Create candidate positions
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
View(step4)
testerinho <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(totalvotes = sum(AantalStemmen), no_of_candidates = max(number))
View(testerinho)
?summarise_at
4368+851
5764+702
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6], decreasing = T),]
# Create candidate positions
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""), no_of_candidates = max(number))
View(step4)
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6], decreasing = T),]
# Create candidate positions
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""), no_of_candidates = max(number), voteshare = AantalStemmen/Geldig)
View(step4)
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw, by.x = c("Regio", "sub_election"), by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6], decreasing = T),]
# Create candidate positions
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""), no_of_candidates = max(number), voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
View(step4)
View(step4)
1200/3044
2848/3007
2988/6022
1200/2420
## Now, we ask ourselves: was it a close election?
## We get the number of seats available to define close elections for 1 seat, 2 seats, and more seats.
allelected <- read.csv("/Data/allelected.csv")
## Now, we ask ourselves: was it a close election?
## We get the number of seats available to define close elections for 1 seat, 2 seats, and more seats.
allelected <- read.csv("Data/allelected.csv")
View(allelected)
View(step4)
allelected <- allelected %>%
mutate(name = paste(voornaam, achternaam, sep = " "))
View(allelected)
## Now, we ask ourselves: was it a close election?
## We get the number of seats available to define close elections for 1 seat, 2 seats, and more seats.
allelected <- read.csv("Data/allelected.csv")
allelected <- allelected %>%
mutate(name = paste(voornaam, achternaam, sep = ""))
View(allelected)
allelected <- allelected %>%
mutate(name = paste(voornaam, achternaam, sep = " "))
allelected %>%
mutate(name = str_replace(name, "\\s\\s"," "))
allelected <- allelected %>%
mutate(name = str_replace(name, "\\s\\s"," "))
View(allelected)
politicians <- unique(allelected$name)
politicians
## Afterwards, we attempt to find whether the close election featured a runner-up (or second-runner-up)
## that has never been into politics yet
step4 %>%
mutate(politician = ifelse(Kandidaat != "" & Kandidaat %in% politicians, 1, 0))
## Afterwards, we attempt to find whether the close election featured a runner-up (or second-runner-up)
## that has never been into politics yet
testerinho <- step4 %>%
mutate(politician = ifelse(Kandidaat != "" & Kandidaat %in% politicians, 1, 0))
View(testerinho)
## Afterwards, we attempt to find whether the close election featured a runner-up (or second-runner-up)
## that has never been into politics yet
testerinho <- step4 %>%
mutate(politician = ifelse(Kandidaat != "", ifelse(Kandidaat %in% politicians, 1, 0), ""))
View(testerinho)
politicians
str_replace("J.J.J.de Vlam","([A-Z]\.)[^\s]","\.\s")
str_replace("J.J.J.de Vlam","([A-Z]\\.)[^\\s]","\\.\\s")
str_replace("J.J.J.de Vlam","([A-Z]\\.)[^\\s]","\\.\s")
str_replace("J.J.J.de Vlam","([A-Z]\\.)[^\\s]","\\\\.\\s")
str_replace("J.J.J.de Vlam","([A-Z]\\.)[^\\s]","\.\\s")
str_replace("J.J.J.de Vlam","([A-Z]\\\\.)[^\\s]","\\\\.\\s")
str_replace("J.J.J.de Vlam","([A-Z]\\\\.)[^\\s]","\\\\.\\s")
str_replace("J.J.J.de Vlam","([A-Z]\\\\.)[^\\s]","\\\\.\ \s")
str_replace("J.J.J.de Vlam","([A-Z]\\\\.)[^\\s]","\\\\. \\s")
str_replace("J.J.J.de Vlam","([A-Z]\\\\.)[^\\s]","appel")
str_replace("J.J.J.de Vlam","([A-Z]\\\.)[^\\s]","appel")
str_replace("J.J.J.de Vlam","([A-Z]\\.)[^\\s]","appel")
str_replace("J.J.J.de Vlam", "?[A-Z]\\.","appel")
str_replace("J.J.J.de Vlam", "?[A-Z]\\\.","appel")
str_replace("J.J.J.de Vlam", "?[A-Z]\\\\.","appel")
str_replace("J.J.J.de Vlam", "?[A-Z]\\.","appel")
str_replace("J.J.J.de Vlam", "....[A-Z]\\.","appel")
str_replace("J.J.J.de Vlam", ".[A-Z]\\.","appel")
step4$Kandidaat
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\S][a-z]","appel")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","appel")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","([A-Z])\\.appel")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","appel")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","(A-Z)\\.\\s(a-z)")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","\1\\.\\s\4")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","([A-Z])\\.\\s\4")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","([A-Z]\\.)\\s\4")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","([A-Z]\\.\\s)")
str_replace("J.J.J.de Vlam", "[A-Z]\\.[^\\s][a-z]","appel"
)
str_replace("J.J.J.de Vlam", "\\.[a-z]","\\.\\s(a-z)")
str_replace("J.J.J.de Vlam", "\\.[a-z]","\\.\\s\\2")
str_replace("J.J.J.de Vlam", "\\.[a-z]","\\.\\s\2")
str_replace("J.J.J.de Vlam", "\\.[a-z]","\\.\\s.")
str_replace("J.J.J.de Vlam", "\\.([a-z])","\\.\\s.\1")
test5 <- str_extract("J.J.J.de Vlam", "\\.([a-z])")
test5 <- str_extract("J.J.J.de Vlam", "\\.\\([a-z]\\)")
test5 <- str_extract("J.J.J.de Vlam", "\\.([a-z])")
substr(test5,2,2)
str_replace("J.J.J.de Vlam", "\\.[a-z]", substr(str_extract("J.J.J.de Vlam", "\\.[a-z]"), 2,2))
str_replace("J.J.J.de Vlam", "\\.[a-z]", "\\.\\ssubstr(str_extract("J.J.J.de Vlam", "\\.[a-z]"), 2,2)")
str_replace("J.J.J.de Vlam", "\\.[a-z]", "\\.\\s"+substr(str_extract("J.J.J.de Vlam", "\\.[a-z]"), 2,2))
str_replace("J.J.J.de Vlam", "\\.[a-z]", "opkankeren")
str_replace("J.J.J.de Vlam", "\\.[a-z]", paste("\\.",substr(str_extract("J.J.J.de Vlam", "\\.[a-z]"),2,2)))
str_replace("J.J.J.de Vlam", "\\.[a-z]", paste("\\.",substr(str_extract("J.J.J.de Vlam", "\\.[a-z]"),2,2)))
str_replace("J.J.J.de Vlam", "\\.[a-z]", paste("\\.",substr(str_extract("J.J.J.de Vlam", "\\.[a-z]"),2,2)))
View(step4)
str_replace(step4$Kandidaat, "\\.[a-z]", paste("\\.",substr(str_extract(step4$Kandidaat, "\\.[a-z]"),2,2)))
step4$Kandidaat <- str_replace(step4$Kandidaat, "\\.[a-z]",
paste("\\.",
substr(
str_extract(
step4$Kandidaat, "\\.[a-z]"),
2,2)))
View(step4)
mr. dr. J.H.W.Q.ter Spill
#Now make an indicator whether someone is a politician
testerinho <- step4 %>%
mutate(politician = ifelse(Kandidaat != "", ifelse(Kandidaat %in% politicians, 1, 0), ""))
View(testerinho)
politicians
# 4. Now, attempt to match step3 to election info
step4 <- merge(x=step3, y=nieuw,
by.x = c("Regio", "sub_election"),
by.y = c("District", "date"))
step4 <- step4[order(step4[,2], step4[,1], step4[,8], step4[,4], step4[,6],
decreasing = T),]
# 5. Create candidate positions, number of candidates, and the vote share
step4 <- step4 %>%
group_by(Regio, sub_election) %>%
mutate(
number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""),
no_of_candidates = max(number),
voteshare = ifelse(Kandidaat != "", AantalStemmen/Geldig,""))
#maybe use string replace all:
str_replace_all(step4$Kandidaat, "\\.[a-z]",
paste("\\.",
substr(
str_extract(
step4$Kandidaat, "\\.[a-z]"),
2,2)))
#maybe use string replace all:
str_replace(step4$Kandidaat, "\\.[a-z]",
paste("\\.",
substr(
str_extract(
step4$Kandidaat, "\\.[a-z]"),
2,2)))
