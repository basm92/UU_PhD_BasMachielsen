#Initial setup
setwd("/home/bas/Downloads/Elections")
#setwd("C:/Users/Machi003/RWD/UU_PhD_BasMachielsen/Elections")
allfiles <- dir()
allfiles <- allfiles[2:27]
#Code for reading the files
library(stringr)
step1 <- data.frame()
step2 <- data.frame()
step3 <- data.frame()
for (i in allfiles) {
step1 <- read.csv(i, sep = ";")
step2 <- cbind(step1, date = str_extract(i,"\\d{8}"))
step3 <- rbind(step3, step2)
}
#Step 3 contains all the elections
library(tidyverse)
names(step3)[1] <- "Regio"
#Create candidate positions
step4 <- step3 %>%
group_by(Regio, date) %>%
mutate(number = ifelse(Kandidaat != "", seq_along(Kandidaat)-5,""))
#Import all names in Parliament Data
library(readxl)
setwd("~/Downloads")
#setwd("C:/Users/Machi003/Downloads")
parl <- read_excel("Parlementen.xlsx")
parl <- parl[,c(seq(1,52,by=2))]
b <- data.frame()
c <- data.frame()
for (i in 1:ncol(parl)) {
b <- cbind(parl[,i], year = names(parl)[i])
names(b) <- c("politician","year")
c <- rbind(c,b)
}
c <- c %>%
na.omit()
# My goal is to find who just won and just lost the elections. Let's find close elections first.
kandidaten <- step4[step4$number != "",]
kandidaten <- kandidaten %>%
group_by(Regio, date) %>%
mutate(votes = sum(AantalStemmen), no_of_candidates = max(number))
### HIER VERDER
test <- kandidaten %>%
mutate(VoteShare = AantalStemmen/votes)
test <- test %>%
mutate(margin = ifelse(no_of_candidates == "2", AantalStemmen/votes, NA))
test <- test %>%
group_by(Regio, date) %>%
mutate(maxShare = max(VoteShare))
test <- test %>%
mutate(margintest = VoteShare - maxShare)
View(test)
### HIER VERDER
test <- kandidaten %>%
mutate(VoteShare = AantalStemmen/votes)
test <- test %>%
group_by(Regio, date) %>%
mutate(maxShare = max(VoteShare))
test <- test %>%
mutate(margintest = VoteShare - maxShare)
View(test)
# My goal is to find who just won and just lost the elections. Let's find close elections first.
kandidaten <- step4[step4$number != "",]
kandidaten <- kandidaten %>%
group_by(Regio, date) %>%
mutate(totalvotes = sum(AantalStemmen), no_of_candidates = max(number))
### HIER VERDER
test <- kandidaten %>%
mutate(VoteShare = AantalStemmen/totalvotes)
test <- test %>%
group_by(Regio, date) %>%
mutate(maxShare = max(VoteShare))
test <- test %>%
mutate(margintest = VoteShare - maxShare)
View(test)
#Look at all elected persons lists
allelected <- read.csv("allelected.csv")
View(allelected)
allelected$date <- paste(allelected$jaar, allelected$maand, allelected$dag, sep = "-")
as.Date("1905-6-16", format = "%Y%m%d")
as.Date("1905-6-16", format = "%Y%M%d")
as.Date("1905-06-16", format = "%Y%m%d")
as.Date("1905-06-16", format = "%Y%m%d")
as.Date(1905-06-16, format = "%Y%m%d")
as.Date("1905-06-16", format = %Y%m%d)
as.Date("1905-06-16", format = "%Y%m%d")
as.Date("2019-01-20")
as.Date("1906-06-16")
as.date(allelected$date)
as.Date(allelected$date)
allelected$date <- as.Date(paste(allelected$jaar, allelected$maand, allelected$dag, sep = "-"))
View(allelected)
allected %>%
filter(type = "algemeen") %>%
group_by(date, districtsnaam) %>%
zetels
allelected %>%
filter(type = "algemeen") %>%
group_by(date, districtsnaam) %>%
zetels
allelected %>%
filter(type = "algemeen") %>%
group_by(date, districtsnaam)
allelected %>%
filter(type == "algemeen") %>%
group_by(date, districtsnaam)
allelected %>%
filter(type.verkiezing == "algemeen") %>%
group_by(date, districtsnaam)
allelected %>%
filter(type.verkiezing == "algemeen") %>%
group_by(date, districtsnaam) %>%
summarise(seats = mean(zetels))
eltesterinho <- allelected %>%
filter(type.verkiezing == "algemeen") %>%
group_by(date, districtsnaam) %>%
summarise(seats = mean(zetels))
View(eltesterinho)
count(allelected$achternaam)
frequency(allelected$achternaam)
#Initial setup
setwd("/home/Documents/UU_PhD_BasMachielsen/Elections")
setwd("~/Documents/UU_PhD_BasMachielsen/Elections")
View(allelected)
